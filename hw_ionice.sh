#!/usr/bin/env bash

# Запускаем ionice с разными приорететами:
#
#    -c 1 <---- _Класс планирования реального времени, наивысший приоритет. Активируется с root доступом_ 
#         -n [0-7], _позволяет указать приоритет ввода/вывода (0-наивысший ) Процессы с одинаковыми приоритетами получают равные кванты времени для осуществления доступа к диску._
#    -с 2 <---- _Стандартный класс планирования операций ввода/вывода. Приоритет ввода/вывода процесса по умолчанию_
#        -n [0-7], _позволяет указать приоритет ввода/вывода (0-наивысший ) Процессы с одинаковыми приоритетами получают равные кванты времени для осуществления доступа к диску._
#    -с 3 <---- _Процесс будет работать с диском только тогда, когда другие процессы не будут работать с ним в течение определенного времени._
#        -n      Не используется
# Если несколько ядер, то для теста, запустим обе задачи на одном ядре

taskset -c 0 time sudo ionice -c 1 -n 0  dd if=/dev/zero of=/tmp/test.img bs=2000 count=1M &
taskset -c 0 time sudo ionice -c 3 dd if=/dev/zero of=/tmp/test2.img bs=2000 count=1M &
